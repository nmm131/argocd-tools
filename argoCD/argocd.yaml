apiVersion: argoproj.io/v1alpha1
kind: ArgoCD
metadata:
  name: argocd
  namespace: argocd
  labels:
    app: argocd
spec:
  grafana:
    enabled: true
    route:
      enabled: true
  prometheus:
    enabled: true
    route:
      enabled: true
  server:
    route:
      enabled: true
  extraConfig:
    resource.customizations: |
      kustomize.buildOptions: --enable-helm
      argoproj.io/Application:
        health.lua: |
          hs = {}
          hs.status = "Progressing"
          hs.message = ""
          if obj.status ~= nil then
            if obj.status.health ~= nil then
              hs.status = obj.status.health.status
              if obj.status.health.message ~= nil then
                hs.message = obj.status.health.message
              end
            end
          end
          return hs
      operators.coreos.com/CatalogSource:
        health.lua: |
          hs = {}
          if obj.status ~= nil then
            if obj.status.connectionState ~= nil then
              if obj.status.connectionState.lastObservedState ~= nil then
                if obj.status.connectionState.lastObservedState == "READY" then
                  hs.status = "Healthy"
                  return hs
                end
              end
            end
          end
          hs.status = "Progressing"
          hs.message = "Unknown"
          return hs
      operators.coreos.com/InstallPlan:
        health.lua: |
          hs = {}
          if obj.status ~= nil then
            if obj.status.phase ~= nil then
              hs.message = obj.status.phase
              if obj.status.phase == "Complete" then
                hs.status = "Healthy"
              else
                hs.status = "Progressing"
              end
              return hs
            end
          end
          hs.status = "Progressing"
          hs.message = "Unknown"
          return hs
      operators.coreos.com/Subscription:
        health.lua: |
          hs = {}
          if obj.status ~= nil then
            if obj.status.installedCSV ~= nil then
              hs.status = "Healthy"
              hs.message = "CSV Installed"
              if obj.status.state ~= nil then
                hs.message = obj.status.state
              end
              return hs
            end
          end
          hs.status = "Progressing"
          hs.message = "Unknown"
          if obj.status.state ~= nil then
            hs.message = obj.status.state
          end
          return hs
    resource.compareoptions: |
      ignoreResourceStatusField: crd
    resource.customizations.ignoreDifferences.ServiceAccount: |
      jsonPointers:
      - /secrets
      - /imagePullSecrets
        
